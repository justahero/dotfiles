[core]
	# Set default editor for commit message
	editor = subl --wait
	# Ignore a list of common files / directories
	excludesfile = ~/.gitignore_global
	autocrlf = input
[alias]
	la = "!git config -l | grep alias | cut -c 7-"
	st = status
	ci = commit --verbose
	ls = branch
	lsa = branch -a
	bm = branch --merged
	del-bm = "!git branch --merged | grep -v ^* | grep -v ^master$ | xargs -n 1 git branch -d"
	aa = add --all
	dc = diff --cached --color
	du = diff --color
	co = checkout
	me = $GIT_AUTHOR_NAME
	diff-stash = "!f() { git stash show -p stash@{${1-0}}; }; f"
	lg = log --pretty=format:'%Cred%h%Creset - %Cgreen(%cr)%Creset%C(yellow)%d%Creset %s %C(bold blue)<%an>%Creset' --abbrev-commit --graph
	lg-me = !git lg --author=\"$GIT_AUTHOR_NAME\"
	authors = shortlog -esn
	today-all = !git lg --all --since='12am'
	lg-day = "!f() { git lg-me --all --after=\"${1-(date \"+%Y-%m-%d\")} 00:00\" --before=\"${1-(date \"+%Y-%m-%d\")} 23:59\"; }; f"
	log-grep = "!f() { git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' ${1-HEAD..HEAD} | grep ${2-\"Merge pull\"}; }; f"
	undo = !git reset --hard && git clean -df
	crush=!git checkout -b $(git rev-parse --abbrev-ref HEAD)-temp && git reset $(git merge-base master HEAD) && git add -A && git commit
	search="!f() { git log -p --all -S \"${1}\"; }; f"
[apply]
  # Before commiting remove trailing white spaces
  whitespace = fix
[commit]
  # Pick the commit template message
  template = ~/.git_commit_msg.txt
  # Display diff in commit message
  verbose = true
[color]
	ui = true
[diff]
	# Try to make patches easier to read by applying a shift.
	indentHeuristic = true
	compactionHeuristic = true
[pager]
	show = diff-highlight | less
	log = diff-highlight | less
	diff = diff-highlight | less
[interactive]
	diffFilter = diff-highlight
	singleKey = true
[rebase]
	stat = true
